//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConLine.biz.setap.ws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSendPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewOrder_NewVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGoodLinkSaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewGoodOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOrderFor5040OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ConLine.Properties.Settings.Default.Iran24_biz_setap_ws_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSendPriceCompletedEventHandler GetSendPriceCompleted;
        
        /// <remarks/>
        public event InsertNewOrderCompletedEventHandler InsertNewOrderCompleted;
        
        /// <remarks/>
        public event InsertNewOrder_NewVersionCompletedEventHandler InsertNewOrder_NewVersionCompleted;
        
        /// <remarks/>
        public event GetOrderStatusCompletedEventHandler GetOrderStatusCompleted;
        
        /// <remarks/>
        public event GetGoodLinkSaleCompletedEventHandler GetGoodLinkSaleCompleted;
        
        /// <remarks/>
        public event UpdateOrderStatusCompletedEventHandler UpdateOrderStatusCompleted;
        
        /// <remarks/>
        public event InsertNewGoodCompletedEventHandler InsertNewGoodCompleted;
        
        /// <remarks/>
        public event RegisterOrderFor5040CompletedEventHandler RegisterOrderFor5040Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSendPrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SendPriceResult GetSendPrice(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string Weight, string OrderPrice, string BuyerCityCode) {
            object[] results = this.Invoke("GetSendPrice", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        Weight,
                        OrderPrice,
                        BuyerCityCode});
            return ((SendPriceResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendPriceAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string Weight, string OrderPrice, string BuyerCityCode) {
            this.GetSendPriceAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, Weight, OrderPrice, BuyerCityCode, null);
        }
        
        /// <remarks/>
        public void GetSendPriceAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string Weight, string OrderPrice, string BuyerCityCode, object userState) {
            if ((this.GetSendPriceOperationCompleted == null)) {
                this.GetSendPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendPriceOperationCompleted);
            }
            this.InvokeAsync("GetSendPrice", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        Weight,
                        OrderPrice,
                        BuyerCityCode}, this.GetSendPriceOperationCompleted, userState);
        }
        
        private void OnGetSendPriceOperationCompleted(object arg) {
            if ((this.GetSendPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendPriceCompleted(this, new GetSendPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertOrderResult InsertNewOrder(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string BuyerName, string BuyerOstanCode, string BuyerCityCode, string BuyerPostalCode, string ByuerAddress, string BuyerTel, string BuyerMobTel, string BuyerEmail, string PostServiceCode, string strDescription, string OrderItems, string PakatWeight) {
            object[] results = this.Invoke("InsertNewOrder", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        BuyerName,
                        BuyerOstanCode,
                        BuyerCityCode,
                        BuyerPostalCode,
                        ByuerAddress,
                        BuyerTel,
                        BuyerMobTel,
                        BuyerEmail,
                        PostServiceCode,
                        strDescription,
                        OrderItems,
                        PakatWeight});
            return ((InsertOrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewOrderAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string BuyerName, string BuyerOstanCode, string BuyerCityCode, string BuyerPostalCode, string ByuerAddress, string BuyerTel, string BuyerMobTel, string BuyerEmail, string PostServiceCode, string strDescription, string OrderItems, string PakatWeight) {
            this.InsertNewOrderAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, BuyerName, BuyerOstanCode, BuyerCityCode, BuyerPostalCode, ByuerAddress, BuyerTel, BuyerMobTel, BuyerEmail, PostServiceCode, strDescription, OrderItems, PakatWeight, null);
        }
        
        /// <remarks/>
        public void InsertNewOrderAsync(
                    string SalesRoomCode, 
                    string SalesRoomUserName, 
                    string SalesRoomPassword, 
                    string BuyerName, 
                    string BuyerOstanCode, 
                    string BuyerCityCode, 
                    string BuyerPostalCode, 
                    string ByuerAddress, 
                    string BuyerTel, 
                    string BuyerMobTel, 
                    string BuyerEmail, 
                    string PostServiceCode, 
                    string strDescription, 
                    string OrderItems, 
                    string PakatWeight, 
                    object userState) {
            if ((this.InsertNewOrderOperationCompleted == null)) {
                this.InsertNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewOrderOperationCompleted);
            }
            this.InvokeAsync("InsertNewOrder", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        BuyerName,
                        BuyerOstanCode,
                        BuyerCityCode,
                        BuyerPostalCode,
                        ByuerAddress,
                        BuyerTel,
                        BuyerMobTel,
                        BuyerEmail,
                        PostServiceCode,
                        strDescription,
                        OrderItems,
                        PakatWeight}, this.InsertNewOrderOperationCompleted, userState);
        }
        
        private void OnInsertNewOrderOperationCompleted(object arg) {
            if ((this.InsertNewOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewOrderCompleted(this, new InsertNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewOrder_NewVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertOrderResult InsertNewOrder_NewVersion(
                    string SalesRoomCode, 
                    string SalesRoomUserName, 
                    string SalesRoomPassword, 
                    string BuyerName, 
                    string BuyerOstanCode, 
                    string BuyerCityCode, 
                    string BuyerPostalCode, 
                    string ByuerAddress, 
                    string BuyerTel, 
                    string BuyerMobTel, 
                    string BuyerEmail, 
                    string PostServiceCode, 
                    string strDescription, 
                    string OrderItems, 
                    string PakatWeight, 
                    string Ticket, 
                    int PayType, 
                    string Massage, 
                    int Raygani) {
            object[] results = this.Invoke("InsertNewOrder_NewVersion", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        BuyerName,
                        BuyerOstanCode,
                        BuyerCityCode,
                        BuyerPostalCode,
                        ByuerAddress,
                        BuyerTel,
                        BuyerMobTel,
                        BuyerEmail,
                        PostServiceCode,
                        strDescription,
                        OrderItems,
                        PakatWeight,
                        Ticket,
                        PayType,
                        Massage,
                        Raygani});
            return ((InsertOrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewOrder_NewVersionAsync(
                    string SalesRoomCode, 
                    string SalesRoomUserName, 
                    string SalesRoomPassword, 
                    string BuyerName, 
                    string BuyerOstanCode, 
                    string BuyerCityCode, 
                    string BuyerPostalCode, 
                    string ByuerAddress, 
                    string BuyerTel, 
                    string BuyerMobTel, 
                    string BuyerEmail, 
                    string PostServiceCode, 
                    string strDescription, 
                    string OrderItems, 
                    string PakatWeight, 
                    string Ticket, 
                    int PayType, 
                    string Massage, 
                    int Raygani) {
            this.InsertNewOrder_NewVersionAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, BuyerName, BuyerOstanCode, BuyerCityCode, BuyerPostalCode, ByuerAddress, BuyerTel, BuyerMobTel, BuyerEmail, PostServiceCode, strDescription, OrderItems, PakatWeight, Ticket, PayType, Massage, Raygani, null);
        }
        
        /// <remarks/>
        public void InsertNewOrder_NewVersionAsync(
                    string SalesRoomCode, 
                    string SalesRoomUserName, 
                    string SalesRoomPassword, 
                    string BuyerName, 
                    string BuyerOstanCode, 
                    string BuyerCityCode, 
                    string BuyerPostalCode, 
                    string ByuerAddress, 
                    string BuyerTel, 
                    string BuyerMobTel, 
                    string BuyerEmail, 
                    string PostServiceCode, 
                    string strDescription, 
                    string OrderItems, 
                    string PakatWeight, 
                    string Ticket, 
                    int PayType, 
                    string Massage, 
                    int Raygani, 
                    object userState) {
            if ((this.InsertNewOrder_NewVersionOperationCompleted == null)) {
                this.InsertNewOrder_NewVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewOrder_NewVersionOperationCompleted);
            }
            this.InvokeAsync("InsertNewOrder_NewVersion", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        BuyerName,
                        BuyerOstanCode,
                        BuyerCityCode,
                        BuyerPostalCode,
                        ByuerAddress,
                        BuyerTel,
                        BuyerMobTel,
                        BuyerEmail,
                        PostServiceCode,
                        strDescription,
                        OrderItems,
                        PakatWeight,
                        Ticket,
                        PayType,
                        Massage,
                        Raygani}, this.InsertNewOrder_NewVersionOperationCompleted, userState);
        }
        
        private void OnInsertNewOrder_NewVersionOperationCompleted(object arg) {
            if ((this.InsertNewOrder_NewVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewOrder_NewVersionCompleted(this, new InsertNewOrder_NewVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrderStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderStatusResult GetOrderStatus(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string OrderCode) {
            object[] results = this.Invoke("GetOrderStatus", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        OrderCode});
            return ((OrderStatusResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string OrderCode) {
            this.GetOrderStatusAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, OrderCode, null);
        }
        
        /// <remarks/>
        public void GetOrderStatusAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string OrderCode, object userState) {
            if ((this.GetOrderStatusOperationCompleted == null)) {
                this.GetOrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrderStatus", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        OrderCode}, this.GetOrderStatusOperationCompleted, userState);
        }
        
        private void OnGetOrderStatusOperationCompleted(object arg) {
            if ((this.GetOrderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderStatusCompleted(this, new GetOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGoodLinkSale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public _Return[] GetGoodLinkSale(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode) {
            object[] results = this.Invoke("GetGoodLinkSale", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        strGoodSellerCode});
            return ((_Return[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGoodLinkSaleAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode) {
            this.GetGoodLinkSaleAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, strGoodSellerCode, null);
        }
        
        /// <remarks/>
        public void GetGoodLinkSaleAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode, object userState) {
            if ((this.GetGoodLinkSaleOperationCompleted == null)) {
                this.GetGoodLinkSaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGoodLinkSaleOperationCompleted);
            }
            this.InvokeAsync("GetGoodLinkSale", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        strGoodSellerCode}, this.GetGoodLinkSaleOperationCompleted, userState);
        }
        
        private void OnGetGoodLinkSaleOperationCompleted(object arg) {
            if ((this.GetGoodLinkSaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGoodLinkSaleCompleted(this, new GetGoodLinkSaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrderStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderChangeStatus[] UpdateOrderStatus(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string GroupOrderCode, string OrderStatusCode) {
            object[] results = this.Invoke("UpdateOrderStatus", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        GroupOrderCode,
                        OrderStatusCode});
            return ((OrderChangeStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderStatusAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string GroupOrderCode, string OrderStatusCode) {
            this.UpdateOrderStatusAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, GroupOrderCode, OrderStatusCode, null);
        }
        
        /// <remarks/>
        public void UpdateOrderStatusAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string GroupOrderCode, string OrderStatusCode, object userState) {
            if ((this.UpdateOrderStatusOperationCompleted == null)) {
                this.UpdateOrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderStatus", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        GroupOrderCode,
                        OrderStatusCode}, this.UpdateOrderStatusOperationCompleted, userState);
        }
        
        private void OnUpdateOrderStatusOperationCompleted(object arg) {
            if ((this.UpdateOrderStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderStatusCompleted(this, new UpdateOrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewGood", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public _Return[] InsertNewGood(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode, string strGoodName, string numGoodPrice, string numGoodWeight, string numGoodCategoryRef, string numPercent) {
            object[] results = this.Invoke("InsertNewGood", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        strGoodSellerCode,
                        strGoodName,
                        numGoodPrice,
                        numGoodWeight,
                        numGoodCategoryRef,
                        numPercent});
            return ((_Return[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewGoodAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode, string strGoodName, string numGoodPrice, string numGoodWeight, string numGoodCategoryRef, string numPercent) {
            this.InsertNewGoodAsync(SalesRoomCode, SalesRoomUserName, SalesRoomPassword, strGoodSellerCode, strGoodName, numGoodPrice, numGoodWeight, numGoodCategoryRef, numPercent, null);
        }
        
        /// <remarks/>
        public void InsertNewGoodAsync(string SalesRoomCode, string SalesRoomUserName, string SalesRoomPassword, string strGoodSellerCode, string strGoodName, string numGoodPrice, string numGoodWeight, string numGoodCategoryRef, string numPercent, object userState) {
            if ((this.InsertNewGoodOperationCompleted == null)) {
                this.InsertNewGoodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewGoodOperationCompleted);
            }
            this.InvokeAsync("InsertNewGood", new object[] {
                        SalesRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        strGoodSellerCode,
                        strGoodName,
                        numGoodPrice,
                        numGoodWeight,
                        numGoodCategoryRef,
                        numPercent}, this.InsertNewGoodOperationCompleted, userState);
        }
        
        private void OnInsertNewGoodOperationCompleted(object arg) {
            if ((this.InsertNewGoodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewGoodCompleted(this, new InsertNewGoodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterOrderFor5040", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public _Return[] RegisterOrderFor5040(string SaleRoomCode, string SalesRoomUserName, string SalesRoomPassword, string SarListCode, string Serial, string BuyerName, string BuyerMobile, string BuyerTell, string OstanCode, string CityCode, string BuyerAddress, string PostCode, string TotalPrice, string GoodString) {
            object[] results = this.Invoke("RegisterOrderFor5040", new object[] {
                        SaleRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        SarListCode,
                        Serial,
                        BuyerName,
                        BuyerMobile,
                        BuyerTell,
                        OstanCode,
                        CityCode,
                        BuyerAddress,
                        PostCode,
                        TotalPrice,
                        GoodString});
            return ((_Return[])(results[0]));
        }
        
        /// <remarks/>
        public void RegisterOrderFor5040Async(string SaleRoomCode, string SalesRoomUserName, string SalesRoomPassword, string SarListCode, string Serial, string BuyerName, string BuyerMobile, string BuyerTell, string OstanCode, string CityCode, string BuyerAddress, string PostCode, string TotalPrice, string GoodString) {
            this.RegisterOrderFor5040Async(SaleRoomCode, SalesRoomUserName, SalesRoomPassword, SarListCode, Serial, BuyerName, BuyerMobile, BuyerTell, OstanCode, CityCode, BuyerAddress, PostCode, TotalPrice, GoodString, null);
        }
        
        /// <remarks/>
        public void RegisterOrderFor5040Async(string SaleRoomCode, string SalesRoomUserName, string SalesRoomPassword, string SarListCode, string Serial, string BuyerName, string BuyerMobile, string BuyerTell, string OstanCode, string CityCode, string BuyerAddress, string PostCode, string TotalPrice, string GoodString, object userState) {
            if ((this.RegisterOrderFor5040OperationCompleted == null)) {
                this.RegisterOrderFor5040OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOrderFor5040OperationCompleted);
            }
            this.InvokeAsync("RegisterOrderFor5040", new object[] {
                        SaleRoomCode,
                        SalesRoomUserName,
                        SalesRoomPassword,
                        SarListCode,
                        Serial,
                        BuyerName,
                        BuyerMobile,
                        BuyerTell,
                        OstanCode,
                        CityCode,
                        BuyerAddress,
                        PostCode,
                        TotalPrice,
                        GoodString}, this.RegisterOrderFor5040OperationCompleted, userState);
        }
        
        private void OnRegisterOrderFor5040OperationCompleted(object arg) {
            if ((this.RegisterOrderFor5040Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterOrderFor5040Completed(this, new RegisterOrderFor5040CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SendPriceResult {
        
        private _Error[] errorField;
        
        private string totalSendPricePishtazField;
        
        private string totalSendPriceSefareshiField;
        
        private string khadamatPriceField;
        
        /// <remarks/>
        public _Error[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string TotalSendPricePishtaz {
            get {
                return this.totalSendPricePishtazField;
            }
            set {
                this.totalSendPricePishtazField = value;
            }
        }
        
        /// <remarks/>
        public string TotalSendPriceSefareshi {
            get {
                return this.totalSendPriceSefareshiField;
            }
            set {
                this.totalSendPriceSefareshiField = value;
            }
        }
        
        /// <remarks/>
        public string KhadamatPrice {
            get {
                return this.khadamatPriceField;
            }
            set {
                this.khadamatPriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class _Error {
        
        private int codeField;
        
        private string messageField;
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderChangeStatus {
        
        private string strOrderCodeField;
        
        private string strOldOrderStatusTitleField;
        
        private string strNewOrderStatusTitleField;
        
        private int retCodeField;
        
        private string retMsgField;
        
        private _Error[] errorField;
        
        /// <remarks/>
        public string strOrderCode {
            get {
                return this.strOrderCodeField;
            }
            set {
                this.strOrderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string strOldOrderStatusTitle {
            get {
                return this.strOldOrderStatusTitleField;
            }
            set {
                this.strOldOrderStatusTitleField = value;
            }
        }
        
        /// <remarks/>
        public string strNewOrderStatusTitle {
            get {
                return this.strNewOrderStatusTitleField;
            }
            set {
                this.strNewOrderStatusTitleField = value;
            }
        }
        
        /// <remarks/>
        public int RetCode {
            get {
                return this.retCodeField;
            }
            set {
                this.retCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RetMsg {
            get {
                return this.retMsgField;
            }
            set {
                this.retMsgField = value;
            }
        }
        
        /// <remarks/>
        public _Error[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class _Return {
        
        private int codeField;
        
        private string messageField;
        
        private string orderCodeField;
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string OrderCode {
            get {
                return this.orderCodeField;
            }
            set {
                this.orderCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderStatusResult {
        
        private _Error[] errorField;
        
        private string orderCodeField;
        
        private string orderDescriptionField;
        
        private string orderStatusCodeField;
        
        private string orderStatusTitleField;
        
        private string buyerNameField;
        
        private string orderRegisterDateField;
        
        private string postCodeField;
        
        private string orderLastUpdateDateField;
        
        /// <remarks/>
        public _Error[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string OrderCode {
            get {
                return this.orderCodeField;
            }
            set {
                this.orderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDescription {
            get {
                return this.orderDescriptionField;
            }
            set {
                this.orderDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatusCode {
            get {
                return this.orderStatusCodeField;
            }
            set {
                this.orderStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderStatusTitle {
            get {
                return this.orderStatusTitleField;
            }
            set {
                this.orderStatusTitleField = value;
            }
        }
        
        /// <remarks/>
        public string BuyerName {
            get {
                return this.buyerNameField;
            }
            set {
                this.buyerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrderRegisterDate {
            get {
                return this.orderRegisterDateField;
            }
            set {
                this.orderRegisterDateField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderLastUpdateDate {
            get {
                return this.orderLastUpdateDateField;
            }
            set {
                this.orderLastUpdateDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertOrderResult {
        
        private _Error[] errorField;
        
        private string orderCodeField;
        
        private string postCodeField;
        
        /// <remarks/>
        public _Error[] Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string OrderCode {
            get {
                return this.orderCodeField;
            }
            set {
                this.orderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSendPriceCompletedEventHandler(object sender, GetSendPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendPriceResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendPriceResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertNewOrderCompletedEventHandler(object sender, InsertNewOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertOrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertOrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertNewOrder_NewVersionCompletedEventHandler(object sender, InsertNewOrder_NewVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewOrder_NewVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewOrder_NewVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertOrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertOrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetOrderStatusCompletedEventHandler(object sender, GetOrderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderStatusResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderStatusResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetGoodLinkSaleCompletedEventHandler(object sender, GetGoodLinkSaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGoodLinkSaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGoodLinkSaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public _Return[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_Return[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UpdateOrderStatusCompletedEventHandler(object sender, UpdateOrderStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderChangeStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderChangeStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void InsertNewGoodCompletedEventHandler(object sender, InsertNewGoodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewGoodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewGoodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public _Return[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_Return[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void RegisterOrderFor5040CompletedEventHandler(object sender, RegisterOrderFor5040CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterOrderFor5040CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterOrderFor5040CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public _Return[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_Return[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591